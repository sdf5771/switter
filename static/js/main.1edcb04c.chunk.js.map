{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Switt.js","components/SwittFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credential","credentialFromResult","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGithub","faGoogle","Switt","swittObj","isOwner","editing","setEditing","text","newSwitt","setNewSwitt","SwittTextRef","doc","id","onDeleteClick","ok","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","SwittFactory","userObj","switt","setSwitt","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","then","createAt","Date","now","creatorId","addDoc","collection","docRef","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","switts","setSwitts","useEffect","q","query","orderBy","onSnapshot","snapshot","swittArr","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","userProfileImg","setUserProfileImg","getMySwitts","where","getDocs","forEach","profileimgRef","updateProfile","currentUser","photoURL","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1edcb04c.chunk.js","sourcesContent":["import firebase, { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport 'firebase/database';\nimport {getFirestore} from 'firebase/firestore';\nimport {getStorage} from 'firebase/storage'\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n  };\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nexport const authService = getAuth(firebaseApp);\n\nexport const dbService = getFirestore();\n\nexport const storageService = getStorage();","import { authService } from 'fbase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport React, {useState} from 'react';\n\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) =>{\n        const {target: {name, value}} = event;\n        if (name === \"email\"){\n            setEmail(value);\n        } else if(name === \"password\"){\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try{\n            let data;\n            if(newAccount) {\n                // create account\n                data = await createUserWithEmailAndPassword(authService,\n                    email, password\n                );\n            } else {\n                // Log In\n                data = await signInWithEmailAndPassword(authService,\n                    email, password\n                );\n            }\n            console.log(data);\n        }catch(error){\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n        <form onSubmit={onSubmit} className='container'>\n            <input name=\"email\" type=\"email\" placeholder='E-Mail' required value={email} onChange={onChange} className='authInput'/>\n            <input name=\"password\" type=\"password\" placeholder='Password' required value={password} onChange={onChange} className='authInput'/>\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className='authInput authSubmit'/>\n            {error && <span className='authError'>{error}</span>}\n        </form>\n        <span onClick={toggleAccount} className='authSwitch'>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    );\n};\n\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\nimport { GithubAuthProvider, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport React from 'react';\nimport { authService } from '../fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n import {\n   faTwitter,\n   faGoogle,\n   faGithub,\n } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async(event) => {\n        const {target:{name}} = event;\n        let provider;\n        if (name === \"google\"){\n            //google social log in\n            provider = new GoogleAuthProvider();\n            const result = await signInWithPopup(authService, provider);\n            const credential = GoogleAuthProvider.credentialFromResult(result);\n            console.log(credential);\n        } else if(name === \"github\"){\n            //github social log in\n            provider = new GithubAuthProvider();\n            const result = await signInWithPopup(authService, provider);\n            const credential = GithubAuthProvider.credentialFromResult(result);\n            console.log(credential);\n        }\n    }\n    return (\n    <div className='authContainer'>\n        <label>Switter</label>\n        <FontAwesomeIcon \n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n        />\n        <AuthForm />\n        <div className='authBtns'>\n            <button onClick={onSocialClick} name=\"github\" className='authBtn'>Continue with Github <FontAwesomeIcon icon={faGithub}/></button>\n            <button onClick={onSocialClick} name=\"google\" className='authBtn'>Continue with Google <FontAwesomeIcon icon={faGoogle}/></button>\n        </div>\n    </div>\n    );\n};\nexport default Auth;","import { dbService, storageService } from 'fbase';\nimport { deleteObject, ref } from 'firebase/storage';\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Switt = ({ swittObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newSwitt, setNewSwitt] = useState(swittObj.text);\n    const SwittTextRef = doc(dbService, \"switts\", `${swittObj.id}`);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this switt?\");\n        console.log(ok); // true or false\n        if(ok){ // window.confirm ok는 true 를 반환\n            // Delete Switts\n            await deleteDoc(SwittTextRef);\n            await deleteObject(ref(storageService, swittObj.attachmentUrl));\n        }\n    };\n    const toggleEditing = async () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(swittObj, newSwitt);\n        await updateDoc(SwittTextRef, {\n            text: newSwitt,\n        });\n        setEditing(false); // editing 모드 종료\n    }\n    const onChange = (event) => {\n        const {target:{value}, } = event;\n        setNewSwitt(value);\n    }\n    return (\n        <div className='switt'>\n            {\n                editing ? (\n                    <>\n                        <form onSubmit={onSubmit} className='container swittEdit'>\n                            <input type=\"text\" placeholder=\"Edit your Switt\" value={newSwitt} required autoFocus onChange={onChange} className='formInput' />\n                            <input type=\"submit\" value=\"Update Switt\" className='formBtn'/>\n                        </form>\n                        <button onClick={toggleEditing} className='formBtn cancelBtn'>Cancel</button>\n                    </>\n                    ) : (\n                    <><h4>{swittObj.text}</h4>\n                    {swittObj.attachmentUrl && <img src={swittObj.attachmentUrl}/>}\n                    {isOwner && (\n                        <div className='switt__actions'>\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash}/>\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt}/>\n                            </span>\n                        </div>\n                    )}\n                    </>\n                )\n            }\n        </div>\n    )\n};\n\nexport default Switt;","import { dbService, storageService } from 'fbase';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { getDownloadURL, ref, uploadString } from 'firebase/storage';\nimport React, {useState} from 'react';\nimport {v4 as uuidv4} from 'uuid'; // random uid Library\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SwittFactory = ({ userObj }) => {\n    const [switt, setSwitt] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\"); // file url 관리\n    const onSubmit = async (event) => {\n        if (switt === \"\"){\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== '') {\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(attachmentRef, attachment, \"data_url\"); \n            attachmentUrl = await getDownloadURL(attachmentRef).then();\n        }\n        const swittObj = {\n            text: switt,\n            createAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        try{\n            const docRef = await addDoc(collection(dbService, \"switts\"), swittObj);\n            console.log(\"Document written with ID : \", docRef.id);\n        }catch(error){\n            console.log(\"Error adding document : \", error);\n        }\n        setSwitt(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target:{value},} = event;\n        setSwitt(value);\n    };\n    const onFileChange = (event) => {\n        const {target:{files}, } = event;\n        const theFile = files[0];\n        const reader = new FileReader(); // FileReader API\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: { result }} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className='factoryForm'>\n                <div className='factoryInput__container'>\n                    <input className='factoryInput_input' value={switt} onChange={onChange} type=\"text\" placeholder=\"What's on your mind ? \" maxLength={120}/>\n                    {/* <input type='file' accept='image/*' onChange={onFileChange}/> */}\n                    <input type=\"submit\" value = \"&rarr;\" className='factoryInput__arrow'/>\n                </div>\n                <label for=\"attach-file\" className='factoryInput__label'>\n                    <span>Add photos</span>\n                    <FontAwesomeIcon icon={faPlus} />\n                </label>\n                <input \n                    id='attach-file'\n                    type='file'\n                    accept='image/*'\n                    onChange={onFileChange}\n                    style={{\n                        opacity: 0,\n                    }}\n                />\n                {attachment && (\n                    <div className='factoryForm__attachment'>\n                        <img src={attachment} style={{\n                            backgroundImage: attachment,\n                        }}/>\n                        <div className='factoryForm__clear' onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes}/>\n                        </div>\n                    </div>\n                )} \n            </form> \n    );\n};\n\nexport default SwittFactory;","import Switt from 'components/Switt';\nimport SwittFactory from 'components/SwittFactory';\nimport { dbService } from 'fbase';\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport React, { useState, useEffect } from 'react';\n\nconst Home = ({ userObj }) => {\n    const [switts, setSwitts] = useState([]);\n    useEffect(() => {\n        const q = query(collection(dbService, \"switts\"), orderBy(\"createAt\", \"desc\"));\n        onSnapshot(q, (snapshot) => {\n            const swittArr = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setSwitts(swittArr);\n        });\n    }, []);\n    return (\n        <div className='container'>\n            <SwittFactory userObj={userObj}/>\n            <div style={{ marginTop: 30 }}>\n                {switts.map((switt) => (\n                    <Switt key={switt.id} swittObj={switt} isOwner={switt.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import { updateProfile } from 'firebase/auth';\nimport { collection, where, getDocs, query, orderBy } from 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService, dbService, storageService } from '../fbase';\nimport {v4 as uuidv4} from 'uuid';\nimport { getDownloadURL, ref, uploadString } from 'firebase/storage';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default ({ refreshUser, userObj }) => { \n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const [userProfileImg, setUserProfileImg] = useState(\"\"); // UserProfile Img\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n        refreshUser();\n    };\n\n    const getMySwitts = async() => {\n        const q = query(\n            collection(dbService, \"switts\"),\n            where(\"creatorId\", \"==\", userObj.uid),\n            orderBy(\"createdAt\")\n        );\n        const querySnapshot = await getDocs(q);\n        querySnapshot.forEach((doc) => {\n            console.log(doc.id, \"=>\", doc.data());\n        });\n    };\n\n    useEffect(() => {\n        getMySwitts();\n    }, []);\n    const onChange = (event) => {\n        const {target:{value}, } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        let profileImgUrl = \"\";\n        if(userProfileImg !== \"\"){\n            const profileimgRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(profileimgRef, userProfileImg, \"data_url\");\n            profileImgUrl = await getDownloadURL(profileimgRef).then();\n        }\n        if(userObj.displayName !== newDisplayName){\n            await updateProfile(authService.currentUser, {displayName: newDisplayName, photoURL: userProfileImg});\n            refreshUser();\n        }\n        setUserProfileImg(\"\");\n    };\n    const onFileChange = (event) => {\n        const {target:{files}, } = event;\n        const theFile = files[0];\n        const reader = new FileReader(); // FileReader API\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: { result }} = finishedEvent;\n            setUserProfileImg(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setUserProfileImg(\"\");\n    return (\n        <div className='container'>\n        <form onSubmit={onSubmit} className='profileForm'>\n            <input onChange={onChange} type=\"text\" autoFocus placeholder='Display Name' value={newDisplayName} className='formInput'/>\n            <input type=\"submit\" value=\"Update Profile\" className='formBtn' style={{ marginTop : 10, }} />\n            <label for=\"attach-file\" className='factoryInput__label'>\n                    <span>Add photos</span>\n                    <FontAwesomeIcon icon={faPlus} />\n                </label>\n                <input \n                    id='attach-file'\n                    type='file'\n                    accept='image/*'\n                    onChange={onFileChange}\n                    style={{\n                        opacity: 0,\n                    }}\n                />\n            {userProfileImg && (\n                <div className='factoryForm__attachment'>\n                        <img src={userProfileImg} style={{\n                            backgroundImage: userProfileImg,\n                        }}/>\n                        <div className='factoryForm__clear' onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes}/>\n                        </div>\n                    </div>\n            )}\n        </form>\n            <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}><FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" /></Link>\n            </li>\n            <li>\n                <Link to=\"/profile\" \n                style={{ \n                    marginLeft: 10, \n                    display: \"flex\", \n                    flexDirection: \"column\", \n                    alignItems: \"center\", \n                    fontSize: 12, \n                    }}><FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size='2x'/><span style={{marginTop: 10}}>\n                        {userObj.displayName ? `${userObj.displayName}'s Profile` : \"Profile\"}\n                        </span>\n                        </Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Navigation;","import React from 'react';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) =>{\n    return(\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                <div \n                    style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path='/'>\n                        <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path='/profile'>\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                    {/* <Redirect from=\"*\" to=\"/\" /> */}\n                </div>\n                ) : (\n                <>\n                <Route exact path='/'>\n                    <Auth />\n                </Route>\n                {/* <Redirect from=\"*\" to=\"/\" /> */}\n                </>\n                )}\n            </Switch>\n        </Router>\n    );  \n};\n\nexport default AppRouter;","import React, {useState, useEffect} from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from '../fbase';\nimport { updateProfile } from 'firebase/auth';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    //listening user log in\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        // if user is log in\n        setIsLoggedIn(true);\n        //setUserObj(user);\n        setUserObj({\n          displayName : user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(user,{displayName: user.displayName, photoURL: user.photoURL}),\n        });\n      } else {\n        // if user log in is failed\n        setIsLoggedIn(false);\n        //setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    //setUserObj(Object.assign({}, user));\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\"} \n    {/* <footer>&copy; {new Date().getFullYear()} Switter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from './fbase';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}